<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解打扫-->
    <context:component-scan base-package="cn.jhsoft"></context:component-scan>

    <!--配置c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql:///artime365"></property>
        <property name="user" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

    <!--sessionFactory的创建交经spring管理-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--因为在hibernate核心配置文件中，没有数据库配置，数据库配置在spring里面配置，注入dataSource-->
        <!--指定使用hibernate核心配置文件-->
        <property name="dataSource" ref="dataSource"/>
        <!--指定hibernate核心配置文件-->
        <!--<property name="configLocations" value="classpath:hibernate.spring.cfg.xml"/>-->

        <!--不需要hibernate核心配置文件，把他里面的东西放在这里-->
        <!--第一步、hibernate的基本配置信息-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
        </property>

        <!--第二步、把映射文件放到核心配置文件中-->
        <property name="mappingResources">
            <list>
                <value>cn/jhsoft/study/springhibernate/entity/Order.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!--创建hibernateTemplate对象-->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <!--注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置hibernate的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <!--建议注入sessionFactory,但是注入dataSource也没问题，sessionFactory里包含了dataSource-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>